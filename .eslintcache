[{"C:\\Users\\ishra\\Desktop\\Todo-List\\src\\index.js":"1","C:\\Users\\ishra\\Desktop\\Todo-List\\src\\TaskApp.js":"2","C:\\Users\\ishra\\Desktop\\Todo-List\\src\\App.js":"3","C:\\Users\\ishra\\Desktop\\Todo-List\\src\\Task.js":"4","C:\\Users\\ishra\\Desktop\\Todo-List\\src\\Input.js":"5","C:\\Users\\ishra\\Desktop\\Todo-List\\src\\Footer.js":"6","C:\\Users\\ishra\\Desktop\\Todo-List\\src\\Header.js":"7","C:\\Users\\ishra\\Desktop\\Todo-List\\src\\Nav.js":"8","C:\\Users\\ishra\\Desktop\\Todo-List\\src\\Home.js":"9","C:\\Users\\ishra\\Desktop\\Todo-List\\src\\Item.js":"10","C:\\Users\\ishra\\Desktop\\Todo-List\\src\\Subtask.js":"11","C:\\Users\\ishra\\Desktop\\Todo-List\\src\\ViewTask.js":"12","C:\\Users\\ishra\\Desktop\\Todo-List\\src\\TaskDetail.js":"13"},{"size":729,"mtime":1665694200262,"results":"14","hashOfConfig":"15"},{"size":1050,"mtime":1665695514321,"results":"16","hashOfConfig":"15"},{"size":1085,"mtime":1665694200138,"results":"17","hashOfConfig":"15"},{"size":1519,"mtime":1665694200432,"results":"18","hashOfConfig":"15"},{"size":1504,"mtime":1665694200275,"results":"19","hashOfConfig":"15"},{"size":174,"mtime":1665694200184,"results":"20","hashOfConfig":"15"},{"size":151,"mtime":1665694200208,"results":"21","hashOfConfig":"15"},{"size":658,"mtime":1665694200335,"results":"22","hashOfConfig":"15"},{"size":327,"mtime":1665694200226,"results":"23","hashOfConfig":"15"},{"size":2067,"mtime":1665694200295,"results":"24","hashOfConfig":"15"},{"size":547,"mtime":1665695977868,"results":"25","hashOfConfig":"15"},{"size":264,"mtime":1665694200483,"results":"26","hashOfConfig":"15"},{"size":510,"mtime":1665694200468,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"14klkg8",{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"31"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"C:\\Users\\ishra\\Desktop\\Todo-List\\src\\index.js",["59"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport TaskApp from \"./TaskApp\";\r\n// import reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/*\" element={<App />} />\r\n      </Routes>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n",["60","61"],"C:\\Users\\ishra\\Desktop\\Todo-List\\src\\TaskApp.js",["62","63"],"C:\\Users\\ishra\\Desktop\\Todo-List\\src\\App.js",["64","65"],"import Header from \"./Header\";\r\nimport Nav from \"./Nav\";\r\nimport Footer from \"./Footer\";\r\nimport Home from \"./Home\";\r\nimport TaskApp from \"./TaskApp\";\r\nimport TaskDetail from \"./TaskDetail\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [search, setSearch] = useState([]);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(tasks);\r\n  }, [tasks, setTasks]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header title={\"Simple Todo App\"} />\r\n      <Nav search={search} setSearch={setSearch} />\r\n\r\n      <Routes>\r\n        <Route path=\"/home\" element={<Home tasks={tasks} />} />\r\n        <Route\r\n          path=\"/tasks\"\r\n          element={<TaskApp tasks={tasks} setTasks={setTasks} />}\r\n        />\r\n        <Route\r\n          path=\"/detail/:id\"\r\n          element={<TaskDetail tasks={tasks} setTasks={setTasks} />}\r\n        ></Route>\r\n      </Routes>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\ishra\\Desktop\\Todo-List\\src\\Task.js",["66","67"],"import React, { useState } from \"react\";\r\nimport Subtask from \"./Subtask\";\r\nimport Input from \"./Input\";\r\nimport Item from \"./Item\";\r\n\r\nconst Task = ({ task, taskIndex, tasks, setTasks }) => {\r\n  // const [taskTitle, setTaskTitle] = useState(task.taskTitle)\r\n  // const [subtasks, setSubtasks] = useState(task.subtask);\r\n\r\n  const subtaskList = task.subtask.map((e, i) => (\r\n    <Subtask\r\n      key={e.id}\r\n      subIndex={i}\r\n      subtask={e}\r\n      // subtasks={subtasks}\r\n      // setSubtasks={setSubtasks}\r\n      task={task}\r\n      taskIndex={taskIndex}\r\n      tasks={tasks}\r\n      setTasks={setTasks}\r\n    />\r\n  ));\r\n\r\n  const numberOfDone = task.subtask.filter((e) => e.isDone).length;\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <Item\r\n        // subtasks={subtasks}\r\n        // setSubtasks={setSubtasks}\r\n        taskIndex={taskIndex}\r\n        task={task}\r\n        tasks={tasks}\r\n        setTasks={setTasks}\r\n        // taskTitle={taskTitle}\r\n        // setTaskTitle={setTaskTitle}\r\n        whatList={2}\r\n        value={task.taskTitle}\r\n        isDone={task.isDone}\r\n      />\r\n      <span> {task.subtask.length} </span> {subtaskList}{\" \"}\r\n      <Input\r\n        // list={subtasks}\r\n        // setList={setSubtasks}\r\n        placeholder={\"Add subtask...\"}\r\n        whatList={1}\r\n        task={task}\r\n        taskIndex={taskIndex}\r\n        // subtasks={subtasks}\r\n        // setSubtasks={setSubtasks}\r\n        tasks={tasks}\r\n        setTasks={setTasks}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","C:\\Users\\ishra\\Desktop\\Todo-List\\src\\Input.js",[],"C:\\Users\\ishra\\Desktop\\Todo-List\\src\\Footer.js",[],"C:\\Users\\ishra\\Desktop\\Todo-List\\src\\Header.js",[],"C:\\Users\\ishra\\Desktop\\Todo-List\\src\\Nav.js",[],"C:\\Users\\ishra\\Desktop\\Todo-List\\src\\Home.js",[],"C:\\Users\\ishra\\Desktop\\Todo-List\\src\\Item.js",["68"],"import React, { useState } from \"react\";\r\n\r\nconst Item = ({\r\n  subIndex,\r\n  taskIndex,\r\n\r\n  // task,\r\n  // subtask,\r\n  whatList,\r\n\r\n  value,\r\n  isDone,\r\n  tasks,\r\n  setTasks,\r\n}) => {\r\n  const [inputText, setInputText] = useState(value);\r\n  // const [checkStatus, setCheckStatus] = useState(isDone);\r\n\r\n  const handleDel = () => {\r\n    const tasksCopy = [...tasks];\r\n    tasksCopy[taskIndex].subtask.splice(subIndex, 1);\r\n    setTasks(tasksCopy);\r\n    \r\n  };\r\n\r\n  const handleDone = () => {\r\n    const tasksCopy = [...tasks];\r\n    tasksCopy[taskIndex].subtask[subIndex].isDone = true;\r\n    setTasks(tasksCopy);\r\n  }\r\n\r\n  const editInput = (e) => {\r\n    const newInputVal = e.target.value;\r\n    setInputText(newInputVal);\r\n  };\r\n\r\n  const changeDoneStatus = () => {\r\n    const tasksCopy = [...tasks];\r\n    let statusCopy = false;\r\n    if (whatList === 1) {\r\n      //update subtask\r\n      statusCopy = tasksCopy[taskIndex].subtask[subIndex].isDone;\r\n      tasksCopy[taskIndex].subtask[subIndex].isDone = !statusCopy;\r\n    } else {\r\n      //updaet task\r\n      statusCopy = tasksCopy[taskIndex].isDone;\r\n      tasksCopy[taskIndex].isDone = !statusCopy;\r\n    }\r\n\r\n    // setCheckStatus(!statusCopy);\r\n    setTasks(tasksCopy);\r\n  };\r\n\r\n  const update = (e) => {\r\n    if (e.keyCode === 13) {\r\n      const tasksCopy = [...tasks];\r\n      if (whatList === 1) {\r\n        //update subtask\r\n        tasksCopy[taskIndex].subtask[subIndex].subtaskTitle = inputText;\r\n      } else {\r\n        //update task\r\n        tasksCopy[taskIndex].taskTitle = inputText;\r\n      }\r\n\r\n      setTasks(tasksCopy);\r\n    }\r\n  };\r\n\r\n  const style = {\r\n    textDecorationLine: isDone ? \"line-through\" : \"none\",\r\n    textAlign: \"ce\",\r\n  };\r\n\r\n  return (\r\n    <div>\r\n     \r\n      <input\r\n        style={style}\r\n        value={inputText}\r\n        onChange={editInput}\r\n        onKeyDown={update}\r\n      />\r\n      {whatList === 1 ? <button onClick={handleDone}> done </button> : \"\"}\r\n      {whatList === 1 ? <button onClick={handleDel}> delete </button> : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","C:\\Users\\ishra\\Desktop\\Todo-List\\src\\Subtask.js",["69"],"C:\\Users\\ishra\\Desktop\\Todo-List\\src\\ViewTask.js",[],"C:\\Users\\ishra\\Desktop\\Todo-List\\src\\TaskDetail.js",[],{"ruleId":"70","severity":1,"message":"71","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":15},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"70","severity":1,"message":"78","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":26},{"ruleId":"70","severity":1,"message":"79","line":1,"column":28,"nodeType":"72","messageId":"73","endLine":1,"endColumn":36},{"ruleId":"70","severity":1,"message":"80","line":13,"column":10,"nodeType":"72","messageId":"73","endLine":13,"endColumn":23},{"ruleId":"70","severity":1,"message":"81","line":13,"column":25,"nodeType":"72","messageId":"73","endLine":13,"endColumn":41},{"ruleId":"70","severity":1,"message":"79","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":25},{"ruleId":"70","severity":1,"message":"82","line":24,"column":9,"nodeType":"72","messageId":"73","endLine":24,"endColumn":21},{"ruleId":"70","severity":1,"message":"83","line":37,"column":9,"nodeType":"72","messageId":"73","endLine":37,"endColumn":25},{"ruleId":"70","severity":1,"message":"79","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":25},"no-unused-vars","'TaskApp' is defined but never used.","Identifier","unusedVar","no-native-reassign",["84"],"no-negated-in-lhs",["85"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'searchResults' is assigned a value but never used.","'setSearchResults' is assigned a value but never used.","'numberOfDone' is assigned a value but never used.","'changeDoneStatus' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]